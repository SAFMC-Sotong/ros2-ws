<?xml version="1.0"?>

<!--
// Copyright 2022 Stereolabs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
-->

<robot xmlns:xacro="http://wiki.ros.org/xacro">
  <xacro:include filename="$(find zed_ros2_minimal)/urdf/include/materials.urdf.xacro" />
  <xacro:property name="M_PI"     value="3.1415926535897931" />

  <!--
    Parameters:
      - name: the camera's name.  should match the parameter sent to the launch file for this camera
      - model: the type of camera, one of zedm, zed2i, virtual
      - enable_gnss: if true enable the URDF link
  -->
  <xacro:macro name="zed_camera" params="name=zedm model=zedm custom_baseline=0">
    <xacro:if value="${model == 'zedm'}">
      <xacro:property name="baseline" value="0.06" />
      <xacro:property name="height" value="0.0265" />
      <xacro:property name="bottom_slope" value="0.0" /> 
      <xacro:property name="screw_offset_x" value="0.0" />
      <xacro:property name="screw_offset_z" value="0.0" />
      <xacro:property name="optical_offset_x" value="0.0" />
    </xacro:if>
    <xacro:if value="${model == 'zed2i'}">
      <xacro:property name="baseline" value="0.12" />
      <xacro:property name="height" value="0.03" />
      <xacro:property name="bottom_slope" value="0.0" />
      <xacro:property name="screw_offset_x" value="-0.01" />
      <xacro:property name="screw_offset_z" value="0.0" />
      <xacro:property name="optical_offset_x" value="-0.01" />
    </xacro:if>
    <xacro:if value="${model == 'virtual'}">
      <xacro:property name="baseline" value="${custom_baseline}" />
      <xacro:property name="height" value="0.031" />
      <xacro:property name="bottom_slope" value="0.0" />
      <xacro:property name="screw_offset_x" value="0.00" />
      <xacro:property name="screw_offset_z" value="-0.0155" />
      <xacro:property name="optical_offset_x" value="0.0" />
    </xacro:if>

    <!-- Camera mounting point (the threaded screw hole in the bottom) -->
    <link name="${name}_camera_link" />
    
    <!-- Camera Center -->
    <link name="${name}_camera_center">
      <xacro:unless value="${model == 'virtual'}">
        <visual>
          <origin xyz="${screw_offset_x} 0 ${screw_offset_z}" rpy="0 0 0"/>
          <geometry>
            <mesh filename="file://$(find zed_msgs)/meshes/${model}.stl" />
          </geometry>
          <material name="${model}_mat" />
        </visual>      
        <collision>
          <origin xyz="${screw_offset_x} 0 ${screw_offset_z}" rpy="0 0 0"/>
          <geometry>
            <mesh filename="file://$(find zed_msgs)/meshes/${model}.stl" />
          </geometry>
        </collision>
      </xacro:unless>
    </link>
    <joint name="${name}_camera_center_joint" type="fixed">
      <parent link="${name}_camera_link"/>
      <child link="${name}_camera_center"/>
      <origin xyz="0 0 ${height/2}" rpy="0 ${bottom_slope} 0" />
    </joint>

    <!-- Left Camera -->
    <link name="${name}_left_camera_frame">
      <xacro:if value="${model == 'virtual'}">
        <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="file://$(find zed_msgs)/meshes/${model}.stl" />
          </geometry>
          <material name="${model}_mat" />
        </visual>
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="file://$(find zed_msgs)/meshes/${model}.stl" />
          </geometry>
        </collision>
      </xacro:if>
    </link>
    <joint name="${name}_left_camera_joint" type="fixed">
      <parent link="${name}_camera_center"/>
      <child link="${name}_left_camera_frame"/>
      <origin xyz="${optical_offset_x} ${baseline/2} 0" rpy="0 0 0" />
    </joint>

    <link name="${name}_left_camera_optical_frame"/>
    <joint name="${name}_left_camera_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="-${M_PI/2} 0.0 -${M_PI/2}"/>
      <parent link="${name}_left_camera_frame"/>
      <child link="${name}_left_camera_optical_frame"/>
    </joint>

    <!-- Right Camera -->
    <link name="${name}_right_camera_frame">
      <xacro:if value="${model == 'virtual'}">
        <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="file://$(find zed_msgs)/meshes/${model}.stl" />
          </geometry>
          <material name="${model}_mat" />
        </visual>      
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="file://$(find zed_msgs)/meshes/${model}.stl" />
          </geometry>
        </collision>
      </xacro:if>
    </link>
    <joint name="${name}_right_camera_joint" type="fixed">
      <parent link="${name}_camera_center"/>
      <child link="${name}_right_camera_frame"/>
      <origin xyz="${optical_offset_x} -${baseline/2} 0" rpy="0 0 0" />
    </joint>

    <link name="${name}_right_camera_optical_frame"/>
    <joint name="${name}_right_camera_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="-${M_PI/2} 0.0 -${M_PI/2}"/>
      <parent link="${name}_right_camera_frame"/>
      <child link="${name}_right_camera_optical_frame"/>
    </joint>

  </xacro:macro>
</robot>
